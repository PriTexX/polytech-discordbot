name: New version release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
    branches: main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-pish-image:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build-and-pish-image

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install OpenVPN
        run: |
          sudo apt update
          sudo apt install -y openvpn openvpn-systemd-resolved     

      - name: Setup VPN config
        run: echo "${{ secrets.OVPN_FILE }}" > config.ovpn

      - name: Connect to VPN
        uses: "kota65535/github-openvpn-connect-action@v2"
        with:
          config_file: config.ovpn
          username: ${{secrets.OVPN_USERNAME}}
          password: ${{secrets.OVPN_PASSWORD}}

      - name: Copy docker-compose
        uses: appleboy/scp-action@master
        with:
          host: ${{secrets.HOST}}
          username: ${{ secrets.HOST_USERNAME }}
          password: ${{ secrets.HOST_PASSWORD }}
          source: "docker-compose.yml"
          target: "/home/pritexx/deploy-bot"

      - name: Pull and run containers
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{secrets.HOST}}
          username: ${{ secrets.HOST_USERNAME }}
          password: ${{ secrets.HOST_PASSWORD }}
          script: |
            cd /home/pritexx/deploy-bot
            echo "${{secrets.ENV_FILE}}" > .env
            docker-compose --env-file .env up -d
            rm -r /home/pritexx/deploy-bot